/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.3 at Mon Jun 24 00:32:06 2019. */

#ifndef PB_FCUBED_PB_H_INCLUDED
#define PB_FCUBED_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _F3Opcode {
    F3Opcode_F3_InitReq = 0,
    F3Opcode_F3_InitAck = 1,
    F3Opcode_F3_HeartbeatReq = 2,
    F3Opcode_F3_HeartbeatAck = 3,
    F3Opcode_F3_SysInfoReq = 4,
    F3Opcode_F3_SysInfoAck = 5,
    F3Opcode_F3_SdInfoReq = 6,
    F3Opcode_F3_SdInfoAck = 7
} F3Opcode;
#define _F3Opcode_MIN F3Opcode_F3_InitReq
#define _F3Opcode_MAX F3Opcode_F3_SdInfoAck
#define _F3Opcode_ARRAYSIZE ((F3Opcode)(F3Opcode_F3_SdInfoAck+1))

/* Struct definitions */
typedef struct _HeartbeatAckMessage {
    uint32_t newLoopNo;
/* @@protoc_insertion_point(struct:HeartbeatAckMessage) */
} HeartbeatAckMessage;

typedef struct _HeartbeatReqMessage {
    uint32_t loopNo;
/* @@protoc_insertion_point(struct:HeartbeatReqMessage) */
} HeartbeatReqMessage;

typedef struct _InitAckMessage {
    bool rtcStatus;
/* @@protoc_insertion_point(struct:InitAckMessage) */
} InitAckMessage;

typedef struct _InitReqMessage {
    uint32_t epoch;
/* @@protoc_insertion_point(struct:InitReqMessage) */
} InitReqMessage;

typedef struct _SdInfoAckMessage {
    bool hasCard;
    bool has_cardUsable;
    bool cardUsable;
    bool has_capacity;
    uint32_t capacity;
    bool has_freeSpace;
    uint32_t freeSpace;
/* @@protoc_insertion_point(struct:SdInfoAckMessage) */
} SdInfoAckMessage;

typedef struct _SdInfoReqMessage {
    int32_t null;
/* @@protoc_insertion_point(struct:SdInfoReqMessage) */
} SdInfoReqMessage;

typedef struct _SysInfoAckMessage {
    char programVersion[32];
    int32_t cpuVersion;
/* @@protoc_insertion_point(struct:SysInfoAckMessage) */
} SysInfoAckMessage;

typedef struct _SysInfoReqMessage {
    int32_t null;
/* @@protoc_insertion_point(struct:SysInfoReqMessage) */
} SysInfoReqMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define InitReqMessage_init_default              {0}
#define InitAckMessage_init_default              {0}
#define HeartbeatReqMessage_init_default         {0}
#define HeartbeatAckMessage_init_default         {0}
#define SysInfoReqMessage_init_default           {0}
#define SysInfoAckMessage_init_default           {"", 0}
#define SdInfoReqMessage_init_default            {0}
#define SdInfoAckMessage_init_default            {0, false, 0, false, 0, false, 0}
#define InitReqMessage_init_zero                 {0}
#define InitAckMessage_init_zero                 {0}
#define HeartbeatReqMessage_init_zero            {0}
#define HeartbeatAckMessage_init_zero            {0}
#define SysInfoReqMessage_init_zero              {0}
#define SysInfoAckMessage_init_zero              {"", 0}
#define SdInfoReqMessage_init_zero               {0}
#define SdInfoAckMessage_init_zero               {0, false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define HeartbeatAckMessage_newLoopNo_tag        1
#define HeartbeatReqMessage_loopNo_tag           1
#define InitAckMessage_rtcStatus_tag             1
#define InitReqMessage_epoch_tag                 1
#define SdInfoAckMessage_hasCard_tag             1
#define SdInfoAckMessage_cardUsable_tag          2
#define SdInfoAckMessage_capacity_tag            3
#define SdInfoAckMessage_freeSpace_tag           4
#define SdInfoReqMessage_null_tag                1
#define SysInfoAckMessage_programVersion_tag     1
#define SysInfoAckMessage_cpuVersion_tag         2
#define SysInfoReqMessage_null_tag               1

/* Struct field encoding specification for nanopb */
extern const pb_field_t InitReqMessage_fields[2];
extern const pb_field_t InitAckMessage_fields[2];
extern const pb_field_t HeartbeatReqMessage_fields[2];
extern const pb_field_t HeartbeatAckMessage_fields[2];
extern const pb_field_t SysInfoReqMessage_fields[2];
extern const pb_field_t SysInfoAckMessage_fields[3];
extern const pb_field_t SdInfoReqMessage_fields[2];
extern const pb_field_t SdInfoAckMessage_fields[5];

/* Maximum encoded size of messages (where known) */
#define InitReqMessage_size                      6
#define InitAckMessage_size                      2
#define HeartbeatReqMessage_size                 6
#define HeartbeatAckMessage_size                 6
#define SysInfoReqMessage_size                   11
#define SysInfoAckMessage_size                   45
#define SdInfoReqMessage_size                    11
#define SdInfoAckMessage_size                    16

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define FCUBED_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
